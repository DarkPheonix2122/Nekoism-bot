<%- include('partials/header', { user: user, title: "Global Settings", sidebar: sidebar }) %>
<style>
.settings-tabs {
  display: flex;
  gap: 0.5em;
  margin-bottom: 1.2em;
  justify-content: flex-start;
  align-items: flex-end;
}
.tab-btn {
  background: #23272a;
  color: #fff;
  border: none;
  border-radius: 6px 6px 0 0;
  padding: 0.7em 1.5em;
  font-size: 1em;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.15s, color 0.15s;
  outline: none;
  width: auto;
  min-width: 0;
  flex: 0 0 auto;
}
.tab-btn.active, .tab-btn:focus {
  background: #ff4fa3;
  color: #fff;
}
.tab-content {
  margin-top: 0;
  display: none;
}
.tab-content.active {
  display: block;
}
.settings-box {
  margin-top: 0;
}
.module-dropdown {
  border: 1px solid #444;
  border-radius: 5px;
  background: #2c2f33;
  padding: 0.5em;
  position: relative;
  min-height: 40px;
  cursor: pointer;
  margin-bottom: 1em;
}
.selected-modules {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
}
.selected-tag {
  background: #5865f2;
  color: #fff;
  border-radius: 3px;
  padding: 2px 8px;
  display: flex;
  align-items: center;
  margin-bottom: 2px;
}
.selected-tag .remove-tag {
  margin-left: 5px;
  cursor: pointer;
  font-weight: bold;
}
.dropdown-list {
  display: none;
  position: absolute;
  top: 110%;
  left: 0;
  right: 0;
  background: #23272a;
  border: 1px solid #444;
  border-radius: 5px;
  z-index: 10;
  max-height: 150px;
  overflow-y: auto;
}
.module-dropdown.open .dropdown-list {
  display: block;
}
.dropdown-item {
  padding: 8px 12px;
  cursor: pointer;
}
.dropdown-item:hover {
  background: #ff4fa3;
  color: #fff;
}
</style>

<div class="settings-tabs">
  <button type="button" class="tab-btn active" onclick="showTab('general', this)">General</button>
  <button type="button" class="tab-btn" onclick="showTab('music', this)">Music</button>
  <button type="button" class="tab-btn" onclick="showTab('favorites', this)">Favorites</button>
</div>

<div class="settings-box">
  <form method="post" action="settings/global">
    <!-- General Tab -->
    <div class="tab-content active" id="tab-general">
      <label>Language:
        <input type= "text" name="lang" value="<%= globalSettings.lang %>">
      </label><br>
      <label>Prefix:
        <input type= "text" name="prefix" value="<%= globalSettings.prefix %>">
      </label><br>
    </div>

    <!-- Music Tab -->
    <div class="tab-content" id="tab-music">
      <label>Music Volume:
        <input name="musicVolume" type="number" min="0" max="100" value="<%= globalSettings.musicVolume %>">
      </label><br>
      <label>Repeat Songs:
        <input type="checkbox" name="musicRepeat" <%= globalSettings.musicRepeat ? "checked" : "" %>>
      </label><br>
      <label>Autoplay Songs:
        <input type="checkbox" name="musicAutoplay" <%= globalSettings.musicAutoplay ? "checked" : "" %>>
      </label><br>
      <label>Preferred Music Filters (up to 5):</label>
      <div id="filterDropdown" class="module-dropdown" tabindex="0">
        <div id="selectedFilters" class="selected-modules"></div>
        <div id="filterDropdownList" class="dropdown-list">
          <% allFilters.forEach(f => { %>
            <div class="dropdown-item" data-value="<%= f %>"><%= f %></div>
          <% }) %>
        </div>
      </div>
      <input type="hidden" name="musicFilters" id="musicFiltersInput" value="<%= (globalSettings.musicFilters || []).join(',') %>">
    </div>

    <!-- Favorites Tab -->
    <div class="tab-content" id="tab-favorites">
      <label>Favorite Movie:
        <input type= "text" name="favoriteMovie" value="<%= globalSettings.favoriteMovie || '' %>">
      </label><br>
      <label>Favorite Color:
        <input type= "text" name="favoriteColor" value="<%= globalSettings.favoriteColor || '' %>">
      </label><br>
      <label>Favorite Food:
        <input type= "text" name="favoriteFood" value="<%= globalSettings.favoriteFood || '' %>">
      </label><br>
      <label>Favorite Animal:
        <input type= "text" name="favoriteAnimal" value="<%= globalSettings.favoriteAnimal || '' %>">
      </label><br>
    </div>
    <button type="submit">Save</button>
  </form>
<div></div>

<script>
function showTab(tab, btn) {
  document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
  if (btn) btn.classList.add('active');
  document.querySelectorAll('.tab-content').forEach(div => div.classList.remove('active'));
  document.getElementById('tab-' + tab).classList.add('active');
}
document.addEventListener("DOMContentLoaded", function() {
  showTab('general', document.querySelector('.tab-btn.active'));
});
</script>
<script>
  // --- Music Filters Multi-Select ---
  const filterDropdown = document.getElementById('filterDropdown');
  const filterDropdownList = document.getElementById('filterDropdownList');
  const selectedFiltersDiv = document.getElementById('selectedFilters');
  const musicFiltersInput = document.getElementById('musicFiltersInput');
  let selectedFilters = (musicFiltersInput.value ? musicFiltersInput.value.split(',').filter(Boolean) : []);

  filterDropdown.addEventListener('click', function(e) {
    filterDropdown.classList.toggle('open');
  });

  filterDropdownList.addEventListener('click', function(e) {
    if (e.target.classList.contains('dropdown-item')) {
      const value = e.target.getAttribute('data-value');
      if (!selectedFilters.includes(value) && selectedFilters.length < 5) {
        selectedFilters.push(value);
        updateSelectedFilters();
      }
    }
  });

  function updateSelectedFilters() {
    selectedFiltersDiv.innerHTML = '';
    selectedFilters.forEach(f => {
      const tag = document.createElement('span');
      tag.className = 'selected-tag';
      tag.textContent = f;
      const remove = document.createElement('span');
      remove.className = 'remove-tag';
      remove.textContent = 'Ã—';
      remove.onclick = () => {
        selectedFilters = selectedFilters.filter(val => val !== f);
        updateSelectedFilters();
      };
      tag.appendChild(remove);
      selectedFiltersDiv.appendChild(tag);
    });
    musicFiltersInput.value = selectedFilters.join(',');
  }

  // Initialize selected filters on page load
  updateSelectedFilters();

  // Close dropdown if clicked outside
  document.addEventListener('click', function(e) {
    if (!filterDropdown.contains(e.target)) {
      filterDropdown.classList.remove('open');
    }
  });
</script>
<%- include('partials/footer', { totalGuilds: totalGuilds, totalUsers: totalUsers }) %>